# .github/workflows/release.yml
name: Test, Build & Deploy Pages

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  workflow_dispatch:

# Define permissions needed for GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Configure GitHub Pages to use only this workflow for deployment
  configure-pages:
    runs-on: ubuntu-latest
    steps:
      - name: Configure GitHub Pages
        uses: actions/configure-pages@v4

  test:
    name: ðŸ§ª Test & Lint
    needs: configure-pages
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          # Use a more specific cache key to avoid corruption
          cache: true
          cache-dependency-path: "go.sum"

      - name: Run unit tests
        run: go test ./... -v

  build:
    name: ðŸ”¨ Build WASM & Tailwind
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.22"
          # Use a more specific cache key to avoid corruption
          cache: true
          cache-dependency-path: "go.sum"

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y binaryen

      - name: Download Tailwind CSS binary and build
        run: |
          # Download tailwindcss binary directly (specific version for stability)
          curl -sLO https://github.com/tailwindlabs/tailwindcss/releases/download/v4.1.7/tailwindcss-linux-x64
          chmod +x tailwindcss-linux-x64
          mv tailwindcss-linux-x64 tailwindcss
          
          # Verify the binary works
          ./tailwindcss --version
          
          # Add to PATH for the build process
          export PATH=$PATH:$PWD
          make release

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./docs

  deploy:
    name: ðŸš€ Deploy to GitHub Pages
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy
        id: deployment
        uses: actions/deploy-pages@v4
